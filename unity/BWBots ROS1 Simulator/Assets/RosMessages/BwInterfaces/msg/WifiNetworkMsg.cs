//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.BwInterfaces
{
    [Serializable]
    public class WifiNetworkMsg : Message
    {
        public const string k_RosMessageName = "bw_interfaces/WifiNetwork";
        public override string RosMessageName => k_RosMessageName;

        public bool in_use;
        public string ssid;
        public string mode;
        public int channel;
        public int rate;
        public int signal;
        public string bars;
        public string security;

        public WifiNetworkMsg()
        {
            this.in_use = false;
            this.ssid = "";
            this.mode = "";
            this.channel = 0;
            this.rate = 0;
            this.signal = 0;
            this.bars = "";
            this.security = "";
        }

        public WifiNetworkMsg(bool in_use, string ssid, string mode, int channel, int rate, int signal, string bars, string security)
        {
            this.in_use = in_use;
            this.ssid = ssid;
            this.mode = mode;
            this.channel = channel;
            this.rate = rate;
            this.signal = signal;
            this.bars = bars;
            this.security = security;
        }

        public static WifiNetworkMsg Deserialize(MessageDeserializer deserializer) => new WifiNetworkMsg(deserializer);

        private WifiNetworkMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.in_use);
            deserializer.Read(out this.ssid);
            deserializer.Read(out this.mode);
            deserializer.Read(out this.channel);
            deserializer.Read(out this.rate);
            deserializer.Read(out this.signal);
            deserializer.Read(out this.bars);
            deserializer.Read(out this.security);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.in_use);
            serializer.Write(this.ssid);
            serializer.Write(this.mode);
            serializer.Write(this.channel);
            serializer.Write(this.rate);
            serializer.Write(this.signal);
            serializer.Write(this.bars);
            serializer.Write(this.security);
        }

        public override string ToString()
        {
            return "WifiNetworkMsg: " +
            "\nin_use: " + in_use.ToString() +
            "\nssid: " + ssid.ToString() +
            "\nmode: " + mode.ToString() +
            "\nchannel: " + channel.ToString() +
            "\nrate: " + rate.ToString() +
            "\nsignal: " + signal.ToString() +
            "\nbars: " + bars.ToString() +
            "\nsecurity: " + security.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
