//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Vision
{
    [Serializable]
    public class Classification2DMsg : Message
    {
        public const string k_RosMessageName = "vision_msgs/Classification2D";
        public override string RosMessageName => k_RosMessageName;

        //  Defines a 2D classification result.
        // 
        //  This result does not contain any position information. It is designed for
        //    classifiers, which simply provide class probabilities given a source image.
        public HeaderMsg header;
        //  A list of class probabilities. This list need not provide a probability for
        //    every possible class, just ones that are nonzero, or above some
        //    user-defined threshold.
        public ObjectHypothesisMsg[] results;
        //  The 2D data that generated these results (i.e. region proposal cropped out of
        //    the image). Not required for all use cases, so it may be empty.
        public Sensor.ImageMsg source_img;

        public Classification2DMsg()
        {
            this.header = new HeaderMsg();
            this.results = new ObjectHypothesisMsg[0];
            this.source_img = new Sensor.ImageMsg();
        }

        public Classification2DMsg(HeaderMsg header, ObjectHypothesisMsg[] results, Sensor.ImageMsg source_img)
        {
            this.header = header;
            this.results = results;
            this.source_img = source_img;
        }

        public static Classification2DMsg Deserialize(MessageDeserializer deserializer) => new Classification2DMsg(deserializer);

        private Classification2DMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.results, ObjectHypothesisMsg.Deserialize, deserializer.ReadLength());
            this.source_img = Sensor.ImageMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.results);
            serializer.Write(this.results);
            serializer.Write(this.source_img);
        }

        public override string ToString()
        {
            return "Classification2DMsg: " +
            "\nheader: " + header.ToString() +
            "\nresults: " + System.String.Join(", ", results.ToList()) +
            "\nsource_img: " + source_img.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
